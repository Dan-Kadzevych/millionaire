{"version":3,"sources":["utils/redux/createReducer.js","utils/helpers.js","store/game/types.js","store/game/reducer.js","store/common/types.js","store/common/reducer.js","store/rootReducer.js","assets/images/hand.png","components/Button.jsx","components/IconButton.jsx","components/AnswerCell.jsx","components/PrizeCell.jsx","components/typography/H1.jsx","pages/Home/Home.jsx","pages/Home/index.js","store/game/actions.js","store/game/schemas.js","store/game/selectors.js","store/game/operations.js","constants/timouts.js","store/common/selectors.js","assets/icons/Cross.jsx","assets/icons/Hamburger.jsx","layout/Drawer.jsx","store/common/actions.js","pages/Game/components/GameZone.jsx","pages/Game/components/PrizesZone.jsx","pages/Game/Game.jsx","pages/Game/index.js","api/requests.js","pages/Final/Final.jsx","pages/Final/index.js","styles/themes/defaultTheme.js","styles/themes/index.js","styles/themes/light.js","styles/GlobalStyles.js","App.jsx","store/configureStore.js","index.jsx"],"names":["createReducer","initialState","handlers","state","action","Object","prototype","hasOwnProperty","call","type","sortByOrder","arr","sort","a","b","Number","orderPosition","prefix","RESET_GAME_STATE","INITIALIZE_GAME_REQUEST","INITIALIZE_GAME_SUCCESS","INITIALIZE_GAME_FAILURE","SET_ANSWER_ID","SET_ACTIVE_QUESTION_ID","SET_IS_QUESTION_RESULT_VISIBLE","SET_SCORE","SET_SHOULD_BLOCK_NAVIGATION","isLoading","questions","byId","allIds","answers","activeQuestionId","undefined","selectedAnswerId","isQuestionResultVisible","score","shouldBlockNavigation","payload","data","entities","questionsById","answersById","result","questionIds","answerIds","firstQuestion","map","id","isVisible","shouldBlock","OPEN_DRAWER","CLOSE_DRAWER","isDrawerOpen","rootReducer","combineReducers","game","gameReducer","common","commonReducer","Button","styled","button","theme","colors","primary","main","white","breakpoints","down","light","dark","IconButton","calculateBorderColor","correct","wrong","selected","success","error","black40","calculateBorderColorOnHover","Container","div","Line","StyledCell","xLight","AnswerSymbol","span","FakeBorder","AnswerCell","handleClick","label","text","onClick","active","disabled","PrizeCell","StyledH1","h1","ContentContainer","ImageContainer","Image","img","TextContent","Home","src","logo","alt","H1","as","Link","to","initializeGameSuccess","setAnswerId","setIsQuestionResultVisible","setShouldBlockNavigation","answerSchema","schema","Entity","gameConfigSchema","getQuestionsById","getActiveQuestionId","getIsConfigLoading","getSelectedAnswerId","getIsQuestionResultVisible","getScore","getShouldBlockNavigation","getSortedQuestionsList","createSelector","questionsIds","getActiveQuestion","getSortedActiveQuestionAnswers","activeQuestion","getActiveQuestionCorrectAnswerIds","correctAnswerIds","getAnsweredQuestionsIds","activeQuestionID","takeWhile","goNextQuestion","history","dispatch","getState","indexOfNextQuestion","findIndex","nextQuestion","length","push","chooseAnswer","setTimeout","includes","prize","getIsDrawerOpen","Cross","className","width","height","viewBox","fill","xmlns","d","defaultProps","Hamburger","background","default","isOpen","Prizes","CrossButton","CrossIcon","Drawer","useDispatch","useSelector","answeredQuestionsIds","reverse","Question","Answers","HamburgerButton","HamburgerIcon","GameZone","useHistory","question","possibleAnswers","PrizesZone","Game","useEffect","Promise","res","gameConfig","config","normalize","keys","formattedData","useBeforeunload","when","message","TotalText","Final","breakpointValues","xs","sm","md","lg","xl","defaultTheme","values","key","between","key1","key2","black","paper","GlobalStyle","createGlobalStyle","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","App","themes","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d391c835.chunk.js","sourcesContent":["function createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (Object.prototype.hasOwnProperty.call(handlers, action.type)) {\n      return handlers[action.type](state, action);\n    }\n\n    return state;\n  };\n}\n\nexport default createReducer;\n","function sortByOrder(arr) {\n  return [...arr].sort(\n    (a, b) => Number(a.orderPosition) - Number(b.orderPosition),\n  );\n}\n\nexport { sortByOrder };\n","const prefix = '[Game]';\n\nconst RESET_GAME_STATE = `${prefix} Reset Game State`;\n\nconst INITIALIZE_GAME_REQUEST = `${prefix} Initialize Game Request`;\nconst INITIALIZE_GAME_SUCCESS = `${prefix} Initialize Game Success`;\nconst INITIALIZE_GAME_FAILURE = `${prefix} Initialize Game Failure`;\n\nconst SET_ANSWER_ID = `${prefix} Set Answer Id`;\nconst SET_ACTIVE_QUESTION_ID = `${prefix} Set Active Question Id`;\nconst SET_IS_QUESTION_RESULT_VISIBLE = `${prefix} Set Show Correct Answer`;\nconst SET_SCORE = `${prefix} Set Score`;\n\nconst SET_SHOULD_BLOCK_NAVIGATION = `${prefix} Set Should Block Navigation`;\n\nexport {\n  RESET_GAME_STATE,\n  INITIALIZE_GAME_REQUEST,\n  INITIALIZE_GAME_SUCCESS,\n  INITIALIZE_GAME_FAILURE,\n  SET_ANSWER_ID,\n  SET_ACTIVE_QUESTION_ID,\n  SET_IS_QUESTION_RESULT_VISIBLE,\n  SET_SCORE,\n  SET_SHOULD_BLOCK_NAVIGATION,\n};\n","import createReducer from 'utils/redux/createReducer';\nimport { sortByOrder } from 'utils/helpers';\nimport {\n  RESET_GAME_STATE,\n  INITIALIZE_GAME_REQUEST,\n  INITIALIZE_GAME_SUCCESS,\n  INITIALIZE_GAME_FAILURE,\n  SET_ANSWER_ID,\n  SET_ACTIVE_QUESTION_ID,\n  SET_IS_QUESTION_RESULT_VISIBLE,\n  SET_SCORE,\n  SET_SHOULD_BLOCK_NAVIGATION,\n} from './types';\n\nconst initialState = {\n  isLoading: true,\n  questions: {\n    byId: {},\n    allIds: {},\n  },\n  answers: {\n    byId: {},\n    allIds: {},\n  },\n  activeQuestionId: undefined,\n  selectedAnswerId: undefined,\n  isQuestionResultVisible: false,\n  score: undefined,\n  shouldBlockNavigation: false,\n};\n\nfunction resetGameState() {\n  return initialState;\n}\n\nfunction finishLoading(state = initialState) {\n  return { ...state, isLoading: false };\n}\n\nfunction startLoading(state = initialState) {\n  return { ...state, isLoading: true };\n}\n\nfunction initializeGameSuccess(\n  state = initialState,\n  {\n    payload: {\n      data: {\n        entities: { questions: questionsById, answers: answersById },\n        result: { questions: questionIds, answers: answerIds },\n      },\n    },\n  },\n) {\n  const firstQuestion = sortByOrder(\n    questionIds.map((id) => questionsById[id]),\n  )[0];\n\n  return {\n    ...state,\n    isLoading: false,\n    questions: { byId: questionsById, allIds: questionIds },\n    answers: { byId: answersById, allIds: answerIds },\n    activeQuestionId: firstQuestion.id,\n    score: '$0',\n    shouldBlockNavigation: true,\n  };\n}\n\nfunction setAnswerId(state, { payload: { id } }) {\n  return {\n    ...state,\n    selectedAnswerId: id,\n  };\n}\n\nfunction setActiveQuestionId(state, { payload: { id } }) {\n  return {\n    ...state,\n    activeQuestionId: id,\n  };\n}\n\nfunction setIsQuestionResultVisible(state, { payload: { isVisible } }) {\n  return {\n    ...state,\n    isQuestionResultVisible: isVisible,\n  };\n}\n\nfunction setScore(state, { payload: { score } }) {\n  return {\n    ...state,\n    score,\n  };\n}\n\nfunction setShouldBlockNavigation(state, { payload: { shouldBlock } }) {\n  return {\n    ...state,\n    shouldBlockNavigation: shouldBlock,\n  };\n}\n\nconst handlers = {\n  [RESET_GAME_STATE]: resetGameState,\n  [INITIALIZE_GAME_REQUEST]: startLoading,\n  [INITIALIZE_GAME_SUCCESS]: initializeGameSuccess,\n  [INITIALIZE_GAME_FAILURE]: finishLoading,\n  [SET_ANSWER_ID]: setAnswerId,\n  [SET_ACTIVE_QUESTION_ID]: setActiveQuestionId,\n  [SET_IS_QUESTION_RESULT_VISIBLE]: setIsQuestionResultVisible,\n  [SET_SCORE]: setScore,\n  [SET_SHOULD_BLOCK_NAVIGATION]: setShouldBlockNavigation,\n};\n\nexport default createReducer(initialState, handlers);\n","const prefix = '[Game]';\n\nconst OPEN_DRAWER = `${prefix} Open Drawer`;\nconst CLOSE_DRAWER = `${prefix} Close Drawer`;\n\nexport { OPEN_DRAWER, CLOSE_DRAWER };\n","import createReducer from 'utils/redux/createReducer';\n\nimport { OPEN_DRAWER, CLOSE_DRAWER } from './types';\n\nconst initialState = {\n  isDrawerOpen: false,\n};\n\nfunction openDrawer(state) {\n  return { ...state, isDrawerOpen: true };\n}\n\nfunction closeDrawer(state) {\n  return { ...state, isDrawerOpen: false };\n}\n\nconst handlers = {\n  [OPEN_DRAWER]: openDrawer,\n  [CLOSE_DRAWER]: closeDrawer,\n};\n\nexport default createReducer(initialState, handlers);\n","import { combineReducers } from 'redux';\n\nimport gameReducer from './game/reducer';\nimport commonReducer from './common/reducer';\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n  common: commonReducer,\n});\n\nexport default rootReducer;\n","export default __webpack_public_path__ + \"static/media/hand.db4d6f4e.png\";","import styled from 'styled-components';\n\nconst Button = styled.button`\n  display: inline-block;\n  text-decoration: none;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.primary.main};\n  color: ${({ theme }) => theme.colors.common.white};\n  padding: 2rem 2.4rem;\n  min-width: 29.6rem;\n  font-weight: 600;\n  font-size: 2rem;\n  line-height: 2.32rem;\n  border-radius: 1.2rem;\n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    font-size: 1.8rem;\n    line-height: 2.1rem;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary.light};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors.primary.dark};\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst IconButton = styled.button`\n  display: inline-block;\n  text-decoration: none;\n  text-align: center;\n  padding: 0.5rem;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-color: transparent;\n\n  &:hover {\n    background-color: transparent;\n  }\n\n  &:active {\n    background-color: transparent;\n  }\n`;\n\nexport default IconButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nfunction calculateBorderColor({ theme, correct, wrong, selected }) {\n  if (correct) {\n    return theme.colors.success.main;\n  }\n\n  if (wrong) {\n    return theme.colors.error.main;\n  }\n\n  if (selected) {\n    return theme.colors.primary.main;\n  }\n\n  return theme.colors.common.black40;\n}\n\nfunction calculateBorderColorOnHover({ theme, correct, wrong }) {\n  if (correct) {\n    return theme.colors.success.main;\n  }\n\n  if (wrong) {\n    return theme.colors.error.main;\n  }\n\n  return theme.colors.primary.main;\n}\n\nfunction calculateBackgroundColor({ theme, selected, correct, wrong }) {\n  if (correct) {\n    return theme.colors.success.light;\n  }\n\n  if (wrong) {\n    return theme.colors.error.light;\n  }\n\n  if (selected) {\n    return theme.colors.primary.xLight;\n  }\n\n  return theme.colors.common.white;\n}\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  position: relative;\n`;\n\nconst Line = styled.div`\n  width: 100%;\n  height: 1px;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 20;\n  background-color: ${calculateBorderColor};\n`;\n\nconst StyledCell = styled.div`\n  background-color: ${calculateBackgroundColor};\n  clip-path: polygon(10% 0, 90% 0, 100% 50%, 90% 100%, 10% 100%, 0% 50%);\n  width: calc(100% - 2px);\n  height: calc(100% - 2px);\n  z-index: 21;\n  cursor: pointer;\n  position: relative;\n  padding: 2.45rem 3.2rem;\n  border-radius: 8px;\n\n  ${({ theme }) => theme.breakpoints.down('xl')} {\n    padding: 2rem 3rem;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    clip-path: polygon(5% 0, 95% 0, 100% 50%, 95% 100%, 5% 100%, 0% 50%);\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    padding: 2rem 2.4rem;\n  }\n`;\n\nconst AnswerSymbol = styled.span`\n  color: ${({ theme }) => theme.colors.primary.main};\n  margin-right: 8px;\n`;\n\nconst FakeBorder = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 22;\n  width: 90%;\n  clip-path: polygon(10% 0, 90% 0, 100% 50%, 90% 100%, 10% 100%, 0% 50%);\n  background-color: ${calculateBorderColor};\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    clip-path: polygon(5% 0, 95% 0, 100% 50%, 95% 100%, 5% 100%, 0% 50%);\n  }\n\n  &:hover {\n    background-color: ${calculateBorderColorOnHover};\n\n    & + ${Line} {\n      background-color: ${calculateBorderColorOnHover};\n    }\n  }\n`;\n\nfunction AnswerCell({ correct, wrong, selected, handleClick, label, text }) {\n  return (\n    <Container>\n      <FakeBorder correct={correct} wrong={wrong} selected={selected}>\n        <StyledCell\n          onClick={handleClick}\n          correct={correct}\n          wrong={wrong}\n          selected={selected}\n        >\n          <AnswerSymbol>{label}</AnswerSymbol>\n          {text}\n        </StyledCell>\n      </FakeBorder>\n      <Line correct={correct} wrong={wrong} selected={selected} />\n    </Container>\n  );\n}\n\nAnswerCell.propTypes = {\n  correct: PropTypes.bool.isRequired,\n  wrong: PropTypes.bool.isRequired,\n  selected: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default AnswerCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  position: relative;\n\n  &:not(:last-child) {\n    margin-bottom: 0.8rem;\n  }\n`;\n\nconst Line = styled.div`\n  width: 100%;\n  height: 1px;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 20;\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.primary.main : theme.colors.common.black40};\n`;\n\nconst StyledCell = styled.div`\n  background-color: ${({ theme }) => theme.colors.common.white};\n  padding: 0.8rem 2.4rem;\n  text-align: center;\n  width: calc(100% - 2px);\n  height: calc(100% - 2px);\n  z-index: 21;\n  border-radius: 8px;\n  clip-path: polygon(10% 0, 90% 0, 100% 50%, 90% 100%, 10% 100%, 0% 50%);\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    clip-path: polygon(5% 0, 95% 0, 100% 50%, 95% 100%, 5% 100%, 0% 50%);\n  }\n\n  color: ${({ active, disabled, theme }) => {\n    if (disabled) {\n      return theme.colors.text.disabled;\n    }\n\n    if (active) {\n      return theme.colors.primary.main;\n    }\n\n    return theme.colors.text.primary;\n  }};\n`;\n\nconst FakeBorder = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 22;\n  width: 60%;\n  clip-path: polygon(10% 0, 90% 0, 100% 50%, 90% 100%, 10% 100%, 0% 50%);\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.primary.main : theme.colors.common.black40};\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    clip-path: polygon(5% 0, 95% 0, 100% 50%, 95% 100%, 5% 100%, 0% 50%);\n  }\n`;\n\nfunction PrizeCell({ text, disabled, active }) {\n  return (\n    <Container>\n      <FakeBorder active={active}>\n        <StyledCell disabled={disabled} active={active}>\n          {text}\n        </StyledCell>\n      </FakeBorder>\n      <Line active={active} />\n    </Container>\n  );\n}\n\nPrizeCell.propTypes = {\n  text: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default PrizeCell;\n","import styled from 'styled-components';\n\nconst StyledH1 = styled.h1`\n  font-size: 5.6rem;\n  line-height: 6.496rem;\n  font-weight: 600;\n  margin-bottom: 6.4rem;\n\n  ${({ theme }) => theme.breakpoints.down('lg')} {\n    font-size: 5rem;\n    line-height: 6rem;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    font-size: 4.5rem;\n    line-height: 5.7rem;\n    margin-bottom: 5.9rem;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    font-size: 3.5rem;\n    line-height: 3.9rem;\n  }\n`;\n\nexport default StyledH1;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport logo from 'assets/images/hand.png';\n\nimport { Button, H1 } from 'components';\n\nconst Container = styled.div`\n  height: 100vh;\n  min-height: 40rem;\n  background: linear-gradient(\n    to right bottom,\n    ${({ theme }) => theme.colors.common.white} 50%,\n    ${({ theme }) => theme.colors.primary.xLight} 50%\n  );\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 8rem;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    padding: 0 6rem;\n    min-height: 60rem;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    padding: 10rem 2.5rem 7.5rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  margin-right: 3.2rem;\n  width: 50%;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    margin-bottom: 2.4rem;\n    margin-right: 0;\n    width: 70%;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    margin-bottom: 2.4rem;\n    margin-right: 0;\n    width: 90%;\n  }\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  height: auto;\n`;\n\nconst TextContent = styled.div`\n  width: 50%;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    text-align: center;\n    width: 70%;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    width: 100%;\n    align-items: stretch;\n    justify-content: space-between;\n    flex: 1;\n  }\n`;\n\nfunction Home() {\n  return (\n    <Container>\n      <ContentContainer>\n        <ImageContainer>\n          <Image src={logo} alt=\"Millionaire\" />\n        </ImageContainer>\n        <TextContent>\n          <H1>Who wants to be a millionaire?</H1>\n          <Button as={Link} to=\"/game\">\n            Start\n          </Button>\n        </TextContent>\n      </ContentContainer>\n    </Container>\n  );\n}\n\nexport default Home;\n","import Home from './Home';\n\nexport default Home;\n","import {\n  RESET_GAME_STATE,\n  INITIALIZE_GAME_REQUEST,\n  INITIALIZE_GAME_SUCCESS,\n  INITIALIZE_GAME_FAILURE,\n  SET_ANSWER_ID,\n  SET_ACTIVE_QUESTION_ID,\n  SET_IS_QUESTION_RESULT_VISIBLE,\n  SET_SCORE,\n  SET_SHOULD_BLOCK_NAVIGATION,\n} from './types';\n\nfunction resetGameState() {\n  return {\n    type: RESET_GAME_STATE,\n  };\n}\n\nfunction initializeGameRequest() {\n  return {\n    type: INITIALIZE_GAME_REQUEST,\n  };\n}\n\nfunction initializeGameSuccess(data) {\n  return {\n    type: INITIALIZE_GAME_SUCCESS,\n    payload: {\n      data,\n    },\n  };\n}\n\nfunction initializeGameFailure() {\n  return {\n    type: INITIALIZE_GAME_FAILURE,\n  };\n}\n\nfunction setAnswerId(id) {\n  return {\n    type: SET_ANSWER_ID,\n    payload: { id },\n  };\n}\n\nfunction setActiveQuestionId(id) {\n  return {\n    type: SET_ACTIVE_QUESTION_ID,\n    payload: { id },\n  };\n}\n\nfunction setIsQuestionResultVisible(isVisible) {\n  return {\n    type: SET_IS_QUESTION_RESULT_VISIBLE,\n    payload: { isVisible },\n  };\n}\n\nfunction setScore(score) {\n  return {\n    type: SET_SCORE,\n    payload: { score },\n  };\n}\n\nfunction setShouldBlockNavigation(shouldBlock) {\n  return {\n    type: SET_SHOULD_BLOCK_NAVIGATION,\n    payload: { shouldBlock },\n  };\n}\n\nexport {\n  resetGameState,\n  initializeGameRequest,\n  initializeGameSuccess,\n  initializeGameFailure,\n  setAnswerId,\n  setActiveQuestionId,\n  setIsQuestionResultVisible,\n  setScore,\n  setShouldBlockNavigation,\n};\n","import { schema } from 'normalizr';\n\nconst answerSchema = new schema.Entity('answers');\n\nconst questionSchema = new schema.Entity('questions', {\n  answers: [answerSchema],\n});\nconst gameConfigSchema = { questions: [questionSchema] };\n\nexport { gameConfigSchema };\n","import { createSelector } from 'reselect';\nimport takeWhile from 'lodash/takeWhile';\n\nimport { sortByOrder } from 'utils/helpers';\n\nconst getQuestionsById = (state) => state.game.questions.byId;\nconst getQuestionsIds = (state) => state.game.questions.allIds;\nconst getActiveQuestionId = (state) => state.game.activeQuestionId;\nconst getAnswersById = (state) => state.game.answers.byId;\nconst getIsConfigLoading = (state) => state.game.isLoading;\nconst getSelectedAnswerId = (state) => state.game.selectedAnswerId;\nconst getIsQuestionResultVisible = (state) =>\n  state.game.isQuestionResultVisible;\nconst getScore = (state) => state.game.score;\nconst getShouldBlockNavigation = (state) => state.game.shouldBlockNavigation;\n\nconst getSortedQuestionsList = createSelector(\n  getQuestionsById,\n  getQuestionsIds,\n  (questionsById, questionsIds) =>\n    sortByOrder(questionsIds.map((id) => questionsById[id])),\n);\n\nconst getActiveQuestion = createSelector(\n  getQuestionsById,\n  getActiveQuestionId,\n  (questionsById, activeQuestionId) => questionsById[activeQuestionId],\n);\n\nconst getSortedActiveQuestionAnswers = createSelector(\n  getActiveQuestion,\n  getAnswersById,\n  (activeQuestion, answersById) =>\n    sortByOrder(activeQuestion.answers.map((id) => answersById[id])),\n);\n\nconst getActiveQuestionCorrectAnswerIds = createSelector(\n  getActiveQuestion,\n  (activeQuestion) => activeQuestion.correctAnswerIds,\n);\n\nconst getAnsweredQuestionsIds = createSelector(\n  getSortedQuestionsList,\n  getActiveQuestionId,\n  (questions, activeQuestionID) => {\n    return takeWhile(\n      questions.map(({ id }) => id),\n      (id) => id !== activeQuestionID,\n    );\n  },\n);\n\nexport {\n  getActiveQuestion,\n  getSelectedAnswerId,\n  getIsConfigLoading,\n  getSortedActiveQuestionAnswers,\n  getActiveQuestionCorrectAnswerIds,\n  getActiveQuestionId,\n  getSortedQuestionsList,\n  getAnsweredQuestionsIds,\n  getIsQuestionResultVisible,\n  getScore,\n  getShouldBlockNavigation,\n};\n","import { normalize } from 'normalizr';\n\nimport { fetchGameConfig } from 'api/requests';\nimport { AFTER_ANSWER_DELAY } from 'constants/timouts';\nimport {\n  resetGameState,\n  initializeGameRequest,\n  initializeGameSuccess,\n  initializeGameFailure,\n  setAnswerId,\n  setActiveQuestionId,\n  setIsQuestionResultVisible,\n  setScore,\n  setShouldBlockNavigation,\n} from './actions';\nimport { gameConfigSchema } from './schemas';\nimport {\n  getActiveQuestionCorrectAnswerIds,\n  getSelectedAnswerId,\n  getSortedQuestionsList,\n  getActiveQuestionId,\n  getActiveQuestion,\n} from './selectors';\n\nfunction initializeGame() {\n  return async (dispatch) => {\n    try {\n      dispatch(resetGameState());\n      dispatch(initializeGameRequest());\n\n      const config = await fetchGameConfig();\n\n      const data = normalize(config, gameConfigSchema);\n\n      const answerIds = Object.keys(data.entities.answers);\n      const formattedData = {\n        ...data,\n        result: { ...data.result, answers: answerIds },\n      };\n\n      dispatch(initializeGameSuccess(formattedData));\n    } catch (e) {\n      dispatch(initializeGameFailure());\n    }\n  };\n}\n\nfunction goNextQuestion(history) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const questions = getSortedQuestionsList(state);\n    const activeQuestionId = getActiveQuestionId(state);\n\n    const indexOfActiveQuestion = questions.findIndex(\n      ({ id }) => id === activeQuestionId,\n    );\n    const indexOfNextQuestion = indexOfActiveQuestion + 1;\n    const nextQuestion = questions[indexOfNextQuestion];\n\n    if (indexOfNextQuestion < questions.length && nextQuestion) {\n      dispatch(setAnswerId(undefined));\n      dispatch(setActiveQuestionId(nextQuestion.id));\n    } else {\n      dispatch(setShouldBlockNavigation(false));\n      history.push('/final');\n    }\n  };\n}\n\nfunction chooseAnswer(id, history) {\n  return (dispatch, getState) => {\n    dispatch(setAnswerId(id));\n\n    const state = getState();\n    const correctAnswerIds = getActiveQuestionCorrectAnswerIds(state);\n    const selectedAnswerId = getSelectedAnswerId(state);\n    const activeQuestion = getActiveQuestion(state);\n\n    setTimeout(() => {\n      dispatch(setIsQuestionResultVisible(true));\n      setTimeout(() => {\n        if (correctAnswerIds.includes(selectedAnswerId)) {\n          dispatch(setIsQuestionResultVisible(false));\n          dispatch(setScore(activeQuestion.prize));\n          dispatch(goNextQuestion(history));\n        } else {\n          dispatch(setShouldBlockNavigation(false));\n          history.push('/final');\n        }\n      }, AFTER_ANSWER_DELAY);\n    }, AFTER_ANSWER_DELAY);\n  };\n}\n\nexport { chooseAnswer, initializeGame };\n","export const AFTER_ANSWER_DELAY = 1000;\n","const getIsDrawerOpen = (state) => state.common.isDrawerOpen;\n\nexport { getIsDrawerOpen };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Cross({ className }) {\n  return (\n    <svg\n      className={className}\n      width=\"14\"\n      height=\"14\"\n      viewBox=\"0 0 14 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M13.3638 2.05025C13.7544 1.65972 13.7544 1.02656 13.3638 0.636033C12.9733 0.245508 12.3401 0.245509 11.9496 0.636033L6.99987 5.58579L2.05014 0.636061C1.65962 0.245537 1.02645 0.245537 0.635928 0.636061C0.245404 1.02659 0.245404 1.65975 0.635928 2.05028L5.58565 7L0.635911 11.9497C0.245387 12.3403 0.245386 12.9734 0.635911 13.364C1.02643 13.7545 1.6596 13.7545 2.05012 13.364L6.99987 8.41421L11.9496 13.364C12.3402 13.7545 12.9733 13.7545 13.3638 13.364C13.7544 12.9735 13.7544 12.3403 13.3638 11.9498L8.41408 7L13.3638 2.05025Z\"\n        fill=\"#1C1C21\"\n      />\n    </svg>\n  );\n}\n\nCross.propTypes = {\n  className: PropTypes.string,\n};\n\nCross.defaultProps = {\n  className: '',\n};\n\nexport default Cross;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Hamburger({ className }) {\n  return (\n    <svg\n      className={className}\n      width=\"16\"\n      height=\"14\"\n      viewBox=\"0 0 16 14\"\n      fill=\"black\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M0 1C0 0.447715 0.447715 0 1 0H15C15.5523 0 16 0.447715 16 1C16 1.55228 15.5523 2 15 2H1C0.447715 2 0 1.55228 0 1Z\"\n        fill=\"#1C1C21\"\n      />\n      <path\n        d=\"M0 7C0 6.44772 0.447715 6 1 6H15C15.5523 6 16 6.44772 16 7C16 7.55228 15.5523 8 15 8H1C0.447715 8 0 7.55228 0 7Z\"\n        fill=\"#1C1C21\"\n      />\n      <path\n        d=\"M1 12C0.447715 12 0 12.4477 0 13C0 13.5523 0.447715 14 1 14H15C15.5523 14 16 13.5523 16 13C16 12.4477 15.5523 12 15 12H1Z\"\n        fill=\"#1C1C21\"\n      />\n    </svg>\n  );\n}\n\nHamburger.propTypes = {\n  className: PropTypes.string,\n};\n\nHamburger.defaultProps = {\n  className: '',\n};\n\nexport default Hamburger;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport {\n  getSortedQuestionsList,\n  getActiveQuestionId,\n  getAnsweredQuestionsIds,\n} from 'store/game/selectors';\nimport { closeDrawer } from 'store/common/operations';\nimport { getIsDrawerOpen } from 'store/common/selectors';\nimport { Cross } from 'assets/icons';\nimport { IconButton, PrizeCell } from 'components';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 0;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  right: 0;\n  background-color: ${({ theme }) => theme.colors.background.default};\n  overflow-x: hidden;\n  padding-top: 6.4rem;\n  padding-bottom: 3.2rem;\n  transition: 0.2s;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    width: ${({ isOpen }) => (isOpen ? '100%' : 0)};\n  }\n`;\n\nconst Prizes = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst CrossButton = styled(IconButton)`\n  position: absolute;\n  top: 2rem;\n  right: 2rem;\n  display: none;\n  z-index: 1100;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    display: inline-block;\n  }\n\n  &:hover {\n    & path {\n      fill: ${({ theme }) => theme.colors.primary.main};\n    }\n  }\n`;\n\nconst CrossIcon = styled(Cross)`\n  width: 1.6rem;\n  height: 1.6rem;\n`;\n\nfunction Drawer() {\n  const dispatch = useDispatch();\n  const isOpen = useSelector(getIsDrawerOpen);\n  const questions = useSelector(getSortedQuestionsList);\n  const activeQuestionId = useSelector(getActiveQuestionId);\n  const answeredQuestionsIds = useSelector(getAnsweredQuestionsIds);\n\n  return (\n    <Container isOpen={isOpen}>\n      <CrossButton onClick={() => dispatch(closeDrawer())}>\n        <CrossIcon />\n      </CrossButton>\n      <Prizes>\n        {[...questions].reverse().map(({ prize, id }) => (\n          <PrizeCell\n            key={id}\n            disabled={answeredQuestionsIds.includes(id)}\n            active={id === activeQuestionId}\n            text={prize}\n          />\n        ))}\n      </Prizes>\n    </Container>\n  );\n}\n\nexport default Drawer;\n","import { OPEN_DRAWER, CLOSE_DRAWER } from './types';\n\nfunction openDrawer() {\n  return {\n    type: OPEN_DRAWER,\n  };\n}\n\nfunction closeDrawer() {\n  return {\n    type: CLOSE_DRAWER,\n  };\n}\n\nexport { openDrawer, closeDrawer };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  getActiveQuestion,\n  getSortedActiveQuestionAnswers,\n  getSelectedAnswerId,\n  getActiveQuestionCorrectAnswerIds,\n  getIsQuestionResultVisible,\n} from 'store/game/selectors';\nimport { chooseAnswer } from 'store/game/operations';\nimport { openDrawer } from 'store/common/operations';\nimport { IconButton, AnswerCell } from 'components';\nimport { Hamburger } from 'assets/icons';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-basis: 0;\n  flex-grow: 1000;\n  min-width: 50%;\n  padding: 13.3rem 8rem 12.2rem;\n  background-color: ${({ theme }) => theme.colors.background.default};\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.down('xl')} {\n    padding: 10rem 5rem 9rem;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    align-items: center;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    padding: 13.6rem 0 2.4rem;\n  }\n`;\n\nconst Question = styled.div`\n  font-size: 3.2rem;\n  line-height: 3.712rem;\n  font-weight: 600;\n  max-width: 62.4rem;\n  width: 100%;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    text-align: center;\n  }\n`;\n\nconst Answers = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, auto);\n  grid-row-gap: 3.2rem;\n  width: 100%;\n  max-width: 84rem;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto;\n    grid-row-gap: 2rem;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto;\n    grid-row-gap: 8px;\n  }\n`;\n\nconst HamburgerButton = styled(IconButton)`\n  position: absolute;\n  top: 2rem;\n  right: 2rem;\n  display: none;\n  z-index: 100;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    display: inline-block;\n  }\n\n  &:hover {\n    & path {\n      fill: ${({ theme }) => theme.colors.primary.main};\n    }\n  }\n`;\n\nconst HamburgerIcon = styled(Hamburger)`\n  width: 2rem;\n  height: 1.8rem;\n`;\n\nfunction GameZone() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const question = useSelector(getActiveQuestion);\n  const possibleAnswers = useSelector(getSortedActiveQuestionAnswers);\n  const correctAnswerIds = useSelector(getActiveQuestionCorrectAnswerIds);\n  const isQuestionResultVisible = useSelector(getIsQuestionResultVisible);\n  const selectedAnswerId = useSelector(getSelectedAnswerId);\n\n  return (\n    <Container>\n      <HamburgerButton onClick={() => dispatch(openDrawer())}>\n        <HamburgerIcon />\n      </HamburgerButton>\n      <Question>{question.text}</Question>\n      <Answers>\n        {possibleAnswers.map(({ id, label, text }) => (\n          <AnswerCell\n            correct={isQuestionResultVisible && correctAnswerIds.includes(id)}\n            wrong={\n              isQuestionResultVisible &&\n              selectedAnswerId === id &&\n              !correctAnswerIds.includes(id)\n            }\n            selected={selectedAnswerId === id}\n            handleClick={() => {\n              if (!selectedAnswerId) {\n                dispatch(chooseAnswer(id, history));\n              }\n            }}\n            label={label}\n            text={text}\n            key={id}\n          />\n        ))}\n      </Answers>\n    </Container>\n  );\n}\n\nexport default GameZone;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport {\n  getSortedQuestionsList,\n  getActiveQuestionId,\n  getAnsweredQuestionsIds,\n} from 'store/game/selectors';\nimport { PrizeCell } from 'components';\n\nconst Container = styled.div`\n  flex-basis: 37.6rem;\n  flex-grow: 1;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    display: none;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('xl')} {\n    flex-basis: 30rem;\n  }\n`;\n\nconst Prizes = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n`;\n\nfunction PrizesZone() {\n  const questions = useSelector(getSortedQuestionsList);\n  const activeQuestionId = useSelector(getActiveQuestionId);\n  const answeredQuestionsIds = useSelector(getAnsweredQuestionsIds);\n\n  return (\n    <Container>\n      <Prizes>\n        {[...questions].reverse().map(({ prize, id }) => (\n          <PrizeCell\n            key={id}\n            disabled={answeredQuestionsIds.includes(id)}\n            active={id === activeQuestionId}\n            text={prize}\n          />\n        ))}\n      </Prizes>\n    </Container>\n  );\n}\n\nexport default PrizesZone;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { Prompt } from 'react-router-dom';\nimport { useBeforeunload } from 'react-beforeunload';\n\nimport { initializeGame } from 'store/game/operations';\nimport { Drawer } from 'layout';\nimport {\n  getIsConfigLoading,\n  getShouldBlockNavigation,\n} from 'store/game/selectors';\nimport { GameZone, PrizesZone } from './components';\n\nconst Container = styled.div`\n  height: 100vh;\n  min-height: 65rem;\n  display: flex;\n`;\n\nfunction Game() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsConfigLoading);\n  const shouldBlockNavigation = useSelector(getShouldBlockNavigation);\n\n  useEffect(() => {\n    dispatch(initializeGame());\n  }, []);\n\n  useBeforeunload(() => \"You'll lose your progress!\");\n\n  if (isLoading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <Container>\n      <Drawer />\n      <Prompt\n        when={shouldBlockNavigation}\n        message=\"You'll lose your progress!\"\n      />\n      <GameZone />\n      <PrizesZone />\n    </Container>\n  );\n}\n\nexport default Game;\n","import Game from './Game';\n\nexport default Game;\n","import gameConfig from 'config/gameConfig.json';\n\nfunction fetchGameConfig() {\n  return new Promise((res) => {\n    // setTimeout(() => res(gameConfig), 2000);\n    res(gameConfig);\n  });\n}\n\nexport { fetchGameConfig };\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport logo from 'assets/images/hand.png';\n\nimport { getScore } from 'store/game/selectors';\nimport { Button, H1 } from 'components';\n\nconst Container = styled.div`\n  height: 100vh;\n  min-height: 40rem;\n  background: ${({ theme }) => theme.colors.background.default};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 8rem;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    padding: 0 6rem;\n    min-height: 60rem;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    padding: 10rem 2.5rem 7.5rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n  }\n`;\n\nconst Image = styled.img`\n  margin-right: 3.2rem;\n  width: 50%;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    margin-bottom: 2.4rem;\n    margin-right: 0;\n    width: 70%;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    margin-bottom: 4rem;\n    margin-right: 0;\n    width: 90%;\n  }\n`;\n\nconst TextContent = styled.div`\n  width: 50%;\n\n  ${({ theme }) => theme.breakpoints.down('md')} {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    text-align: center;\n    width: 70%;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    width: 100%;\n    align-items: stretch;\n    justify-content: space-between;\n    flex: 1;\n  }\n`;\n\nconst TotalText = styled.span`\n  font-size: 3.2rem;\n  line-height: 3.712rem;\n  font-weight: 600;\n  opacity: 0.5;\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    font-size: 2rem;\n    line-height: 2.5rem;\n  }\n`;\n\nfunction Final() {\n  const score = useSelector(getScore);\n\n  if (score === undefined) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container>\n      <ContentContainer>\n        <Image src={logo} alt=\"\" />\n        <TextContent>\n          <div>\n            <TotalText>Total score:</TotalText>\n            <H1 as=\"div\">{score} earned</H1>\n          </div>\n          <Button as={Link} to=\"/game\">\n            Try Again\n          </Button>\n        </TextContent>\n      </ContentContainer>\n    </Container>\n  );\n}\n\nexport default Final;\n","import Final from './Final';\n\nexport default Final;\n","const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\nconst breakpointValues = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nconst defaultTheme = {\n  breakpoints: {\n    keys: breakpointKeys,\n    values: breakpointValues,\n    down: (key) => {\n      return `@media (max-width: ${breakpointValues[key]}px)`;\n    },\n    between: (key1, key2) => {\n      return `@media (min-width: ${breakpointValues[key1]}px) and (max-width: ${breakpointValues[key2]}px)`;\n    },\n  },\n};\n\nexport default defaultTheme;\n","import lightTheme from './light';\n\nexport default { light: lightTheme };\n","import defaultTheme from './defaultTheme';\n\nconst lightTheme = {\n  ...defaultTheme,\n  colors: {\n    common: {\n      black: '#000',\n      black40: '#D0D0D8',\n      white: '#fff',\n    },\n    primary: {\n      dark: '#E87928',\n      main: '#FF8B37',\n      light: '#FFAC70',\n      xLight: '#FFF3EB',\n    },\n    success: {\n      main: '#47D867',\n      light: '#E6FAEA',\n    },\n    error: {\n      main: '#EC6259',\n      light: '#FDEEED',\n    },\n    background: {\n      default: '#F5F5F7',\n      paper: '#fff',\n    },\n    text: {\n      primary: '#1C1C21',\n      disabled: '#D0D0D8',\n    },\n  },\n};\n\nexport default lightTheme;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');\n\n  *,\n  *::after,\n  *::before {\n    margin: 0;\n    padding: 0;\n    box-sizing: inherit;\n  }\n    \n  body {\n    font-family: 'Inter', sans-serif;\n    font-size: 2rem;\n    box-sizing: border-box;\n    line-height: 2.32rem;\n    font-weight: 400;\n  }\n  \n  html {\n    font-size: 62.5%;\n    \n    ${({ theme }) => theme.breakpoints.down('lg')} {\n      font-size: 50%\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport configureStore from 'store/configureStore';\nimport { Home, Game, Final } from 'pages';\n\nimport themes from './styles/themes';\nimport GlobalStyle from './styles/GlobalStyles';\n\nconst store = configureStore({});\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={themes.light}>\n        <GlobalStyle />\n        <Router>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/game\">\n            <Game />\n          </Route>\n          <Route exact path=\"/final\">\n            <Final />\n          </Route>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './rootReducer';\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}